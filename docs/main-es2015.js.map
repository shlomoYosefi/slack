{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auto.guard.ts","./src/app/can-activ.service.ts","./src/app/comps/chat/chat.component.ts","./src/app/comps/chat/chat.component.html","./src/app/comps/chat/dropdown.directive.ts","./src/app/comps/home/home.component.ts","./src/app/comps/home/home.component.html","./src/app/comps/input-amessege/input-amessege.component.ts","./src/app/comps/input-amessege/input-amessege.component.html","./src/app/comps/list-nams/list-nams.component.ts","./src/app/comps/list-nams/list-nams.component.html","./src/app/comps/open/open.component.ts","./src/app/comps/open/open.component.html","./src/app/comps/registration/registration.component.ts","./src/app/comps/registration/registration.component.html","./src/app/comps/sign-in/sign-in.component.ts","./src/app/comps/sign-in/sign-in.component.html","./src/app/services/get-data.service.ts","./src/app/services/send-data.service.ts","./src/app/services/stor/events.ts","./src/app/services/stor/postim.ts","./src/app/services/stor/selectorim.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignInComponent } from './comps/sign-in/sign-in.component';\r\nimport { AutoGuard } from './auto.guard';\r\nimport { HomeComponent } from './comps/home/home.component';\r\nimport { OpenComponent } from './comps/open/open.component';\r\nimport { RegistrationComponent } from './comps/registration/registration.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:\"\", component:OpenComponent},\r\n  {path:\"home\", component:HomeComponent , canActivate:[AutoGuard]},\r\n  {path:\"logIn\", component:SignInComponent  },\r\n  {path:\"registration\", component:RegistrationComponent },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'slack';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignInComponent } from './comps/sign-in/sign-in.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ChatComponent } from './comps/chat/chat.component';\r\nimport { DropdownDirective } from './comps/chat/dropdown.directive';\r\nimport { AutoGuard } from './auto.guard';\r\nimport { CanActivService } from './can-activ.service';\r\nimport { ListNamsComponent } from './comps/list-nams/list-nams.component';\r\nimport { HomeComponent } from './comps/home/home.component';\r\nimport { HttpClientModule }from '@angular/common/http';\r\nimport { StoreModule } from '@ngrx/store' ;\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\r\nimport { reducer } from './services/stor/events';\r\nimport { InputAMessegeComponent } from './comps/input-amessege/input-amessege.component';\r\nimport { OpenComponent } from './comps/open/open.component';\r\nimport { RegistrationComponent } from './comps/registration/registration.component'\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { environment } from 'src/environments/environment';\r\nimport { reducerPost } from './services/stor/postim';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignInComponent,\r\n    ChatComponent,\r\n    DropdownDirective,\r\n    ListNamsComponent,\r\n    HomeComponent,\r\n    InputAMessegeComponent,\r\n    OpenComponent,\r\n    RegistrationComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n\r\n    StoreModule.forRoot( {users:reducer, posts:reducerPost}, {\r\n\r\n      runtimeChecks: {\r\n        strictStateImmutability: true,\r\n        strictActionImmutability: true,\r\n      }\r\n\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    \r\n    \r\n  ],\r\n  providers: [AutoGuard,CanActivService],\r\n  bootstrap: [AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable, from } from 'rxjs';\r\nimport{CanActivService}from './can-activ.service'\r\n@Injectable({\r\n  providedIn: 'root',\r\n  \r\n})\r\nexport class AutoGuard implements CanActivate {\r\n\r\n  constructor(private srv:CanActivService, private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      console.log(\"canActivate\");\r\n      \r\n      if (this.srv.getLogIn()){\r\n        \r\n        \r\n    return true;}\r\n    else{\r\n      console.log(false);\r\n      return false\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivService {\n\n  logIn =false\n  constructor() { }\n\n\n  getLogIn(){\n    console.log(this.logIn);\n    \n    return this.logIn\n  }\n}\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { Subject, Observable, observable } from 'rxjs';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\nimport { persone } from 'src/app/services/stor/events';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit,OnDestroy {\r\n  \r\n  \r\n  myMessege =[]\r\n  myAllMessege=[]\r\n  hello:string\r\n  myUser:persone\r\n  userClick:persone\r\n\r\n  constructor( private srvData:SendDataService) { }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    this.srvData.personU.subscribe(val=>this.myUser=val)\r\n    this.srvData.clickPerson.subscribe(val=>this.userClick=val)\r\n\r\n    this.srvData.arrayPost.subscribe(val=>{console.log(val),this.myMessege=val})\r\n    \r\n    this.srvData.personU.subscribe(val=> {\r\n      if(val !=null){\r\n      this.hello = `שלום ${val.firstName} ${val.lastName} `}})\r\n  }\r\n\r\n\r\n\r\n\r\n  allMesseg(){\r\n    this.srvData.myAllPosts.subscribe(val=>{\r\n      console.log(val);\r\n      this.myAllMessege=[]\r\n      for( let i in val){\r\n        \r\n        if(val[i] !=''){\r\n        this.myAllMessege.push(val[i])}\r\n        this.myMessege = this.myAllMessege  \r\n      }\r\n      this.myAllMessege.sort(function(a,b){\r\n        return a.id - b.id\r\n      })\r\n      \r\n      \r\n    })\r\n    \r\n    \r\n    \r\n\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.myMessege = ['']\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"chat\">\r\n    <span id=\"hello\" >{{hello}}</span><br>\r\n  <div class=\"buttons\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)='allMesseg()'>כל ההודעות</button>\r\n    <button type=\"button\" class=\"btn btn-danger\">הכי ישן</button>\r\n    <button type=\"button\" class=\"btn btn-success\">הכי חדש</button>\r\n   \r\n  </div>\r\n\r\n\r\n  <div class=\"h3\">\r\n    <h3>הצ'אטים שלי</h3>\r\n  </div><br><br><br><br><br><br>\r\n\r\n\r\n  <div id=\"messeg\" *ngFor ='let i of myMessege' >\r\n    <div class=\"nessU\" *ngIf='i.address == myUser.id' style=\" text-align: right;\">\r\n      <span id=\"spanAddress\" >{{i.addressName}}</span><br>\r\n      <span style=\"color: cornflowerblue;\">{{i.dateDay}}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: cornflowerblue;\">{{i.dateTime}}</span><br><br>\r\n      <span style=\"color: brown;\">{{i.text}}</span><hr><br>\r\n    </div>\r\n\r\n    <div class=\"nessClick\" *ngIf='i.address != myUser.id' style=\"text-align: left \">\r\n      <span id=\"spanAddress\" >{{i.addressName}}</span><br>\r\n      <span style=\"color: cornflowerblue;\">{{i.dateDay}}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: cornflowerblue;\">{{i.dateTime}}</span><br><br>\r\n      <span style=\"color: darkgreen;\">{{i.text}}</span><hr><br>\r\n    </div>\r\n    \r\n  </div>\r\n</div>","import { Directive, HostListener, HostBinding, ElementRef } from '@angular/core';\r\n@Directive({ selector: '[appDropdown]' }) export class DropdownDirective {\r\n@HostBinding('class.open') isOpen = false;\r\n@HostListener('document:click', ['$event']) toggleOpen(event: Event) { this.isOpen = this.elRef.nativeElement.contains(event.target) ? !this.isOpen : false; } constructor(private elRef: ElementRef) { }\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { CanActivService } from 'src/app/can-activ.service';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit ,OnDestroy{\r\n\r\n  constructor(private srv:SendDataService ,private gurd:CanActivService) { }\r\n  ngOnDestroy(): void {\r\n    this.gurd.logIn = false\r\n    this.srv.personU =new BehaviorSubject(null)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div class=\"all\" >\r\n\r\n\r\n    <div class=\"listUsers\">\r\n        <app-list-nams></app-list-nams>\r\n    </div>\r\n\r\n\r\n    <div class=\"chatAndInput\" >\r\n\r\n        <div class=\"chat\">\r\n            <app-chat></app-chat>\r\n        </div>\r\n\r\n        <div class=\"input\">\r\n            <app-input-amessege></app-input-amessege>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\nimport { persone } from 'src/app/services/stor/events';\r\n\r\n@Component({\r\n  selector: 'app-input-amessege',\r\n  templateUrl: './input-amessege.component.html',\r\n  styleUrls: ['./input-amessege.component.css']\r\n})\r\nexport class InputAMessegeComponent implements OnInit {\r\n\r\n  input\r\n  constructor(private srv:GetDataService, private srvData:SendDataService) { }\r\n\r\n  myPerson:string = \"הודעה\"\r\n  myPersonSend:persone\r\n  mypersonSendTo:number\r\n  ngOnInit(): void {\r\n     this.srvData.clickPerson.subscribe(val=>{this.myPersonSend = val,this.myPerson= `הודעה ל${val.firstName} ${val.lastName}`})\r\n    //  this.srv.personU.subscribe(val=> this.mypersonSendTo = val.id)\r\n     this.input = document.getElementById('inputSend')\r\n\r\n  }\r\n\r\n  send(){\r\n// console.log(this.myPersonSend);\r\n\r\n    let date =new Date();\r\n   \r\n\r\n    \r\n//     console.log(date);\r\n    \r\n    let text = this.input.value\r\n    let address\r\n    let addressName\r\n    let addressee =this.myPersonSend.id  \r\n    let addresseeName= `${this.myPersonSend.firstName} ${this.myPersonSend.lastName}`\r\n    \r\n    \r\n    \r\n    this.srvData.personU.subscribe(val=> {\r\n      address = val.id\r\n      addressName = `${val.firstName} ${val.lastName}`\r\n    \r\n    })\r\n    \r\n\r\n    let post ={\r\n      id:++this.srvData.counter,\r\n      address:address,\r\n      addressName:addressName,\r\n      addressee:addressee,\r\n      addresseeName:addresseeName,\r\n      date:new Date(),\r\n      dateTime:`${date.getHours()} : ${date.getMinutes()}`,\r\n      dateDay:date.toLocaleDateString(),\r\n      text:text\r\n    };\r\n    \r\n    this.srv.sendPost(post)\r\n    this.input.value = ''\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  return(){\r\n    if (this.myPersonSend ==undefined){\r\n      this.input.value = ''\r\n      alert(\"הכנס נמען שאתה רוצה לשלוח לו\")\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n \r\n\r\n \r\n\r\n}\r\n","    <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\" style=\"display: flex;\">\r\n          <button (click)='send()'>שלח</button>\r\n        <textarea #inp (input)='return()' (keyup.enter)='send()' dir=\"rtl\" id=\"inputSend\" class=\"form-control\" aria-label=\"With textarea\" [placeholder] = 'myPerson'></textarea>\r\n      \r\n      </div>\r\n\r\n\r\n      </div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { selectUserNameFeature, usersFeature } from 'src/app/services/stor/selectorim';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n@Component({\r\n  selector: 'app-list-nams',\r\n  templateUrl: './list-nams.component.html',\r\n  styleUrls: ['./list-nams.component.css']\r\n})\r\nexport class ListNamsComponent implements OnInit {\r\n\r\n  users=[]\r\n  myusers=[]\r\n  \r\n\r\n\r\n  constructor( private stor: Store , private srvData:SendDataService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.srvData.myUsers.subscribe(val=>{\r\n      for( let i in val){\r\n        if(val[i].firstName != undefined){\r\n        this.myusers.push(val[i])}\r\n      }\r\n      this.users = this.myusers\r\n    })\r\n\r\n    // this.srv.myUsers.subscribe(val => {this.users = val, this.myusers=val})\r\n    \r\n    \r\n  }\r\n\r\n  sendPersom(person) {\r\n    this.srvData.getFilterDataMessege(person)\r\n  }\r\n\r\n  myinp(input) {\r\n    this.users = this.myusers.filter((val) => val.firstName.toLowerCase().startsWith(input))\r\n  }\r\n\r\n  log() {\r\n       \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"all\">\r\n\r\n    <div class=\"persons\">\r\n        <div class=\"input-group\">\r\n<!-- <button (click)='log()'>llllllll</button> -->\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"חיפוש חופשי\" (input)='myinp($event.target.value)'>\r\n        </div>\r\n\r\n      <!-- <button (click)='log()'>llllll</button> -->\r\n\r\n\r\n\r\n        <div class=\"buttons\" >\r\n            <button *ngFor='let i of users' (click)='sendPersom(i)'>{{i.firstName}} {{i.lastName}} </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-open',\r\n  templateUrl: './open.component.html',\r\n  styleUrls: ['./open.component.css']\r\n})\r\nexport class OpenComponent implements OnInit {\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(){    \r\n    this.router.navigate(['/logIn'])\r\n  }\r\n\r\n  registration(){\r\n    this.router.navigate(['/registration'])\r\n  }\r\n\r\n}\r\n","\n<div>\n \n<div class=\" header\">\n    <h1 id=\"s\">s</h1><h1 id=\"l\">l</h1><h1 id=\"a\">a</h1><h1 id=\"c\">c</h1><h1 id=\"k\">k</h1>\n</div>\n\n<div class=\"allData\">\n    \n        \n        <div class=\"explain\">\n\n            <span style=\"text-decoration: underline;\">WORK FROM HOME</span><br><br>\n            <h1>Slack brings the team together, wherever you are</h1><br><br>\n            <p>With all of your communication and tools in one place, remote teams will stay productive no matter where you’re working from.</p>\n            \n        <div class=\"buttons\">\n    <button class=\"login\" (click)='login()'>\n       login\n    </button>\n\n   <button class=\"registration\" (click)='registration()'>\n        registration\n   </button>\n</div>\n</div>\n\n<div class=\"img\">\n    <img src=\"https://a.slack-edge.com/dd0405/marketing/img/solutions/remote-work/img-hero-remote.jpg\" srcset=\"https://a.slack-edge.com/dd0405/marketing/img/solutions/remote-work/img-hero-remote.jpg 1x, https://a.slack-edge.com/dd0405/marketing/img/solutions/remote-work/img-hero-remote@2x.jpg 2x\" alt=\"A Slack channel surrounded by people’s profile photos and messages like “Working from home!” and “Commuting, be there soon”\">\n</div>\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CanActivService } from 'src/app/can-activ.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { addPerson } from 'src/app/services/stor/events';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { ChatComponent } from '../chat/chat.component';\r\nimport { of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  log \r\n\r\n  constructor(private fb:FormBuilder ,private srvCanActivate:CanActivService , private stor:Store<any>,private fireStore:AngularFirestore ,private srvData:SendDataService,private router:Router ,private srvGet:GetDataService) { }\r\n\r\n\r\n  registrationFromG = this.fb.group({\r\n    firstName :['',Validators.required],\r\n    lastName : ['',Validators.required],\r\n    email:['',[Validators.required,Validators.email]],\r\n    password:['',Validators.required],\r\n    confirmPassword:['',Validators.required]})\r\n  \r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  guard(firstName,lastName,email,password,ConfirmPassword){\r\n\r\n    if(password !== ConfirmPassword){\r\n      alert(\"אימות סיסמא שגוי\")\r\n      return\r\n    }\r\n\r\n    \r\n    console.log(this.registrationFromG.valid);\r\n    \r\n    if(this.registrationFromG.valid){\r\n\r\n      let id = Math.floor(Math.random() * 10000000);\r\n      let person ={\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password\r\n      }\r\n      console.log(person);\r\n      this.srvGet.addPerson(person)\r\n      this.srvData.personU.next(person)\r\n      \r\n\r\n      \r\n      // setTimeout(()=>{\r\n      //   this.srvData.personUser.next(person)\r\n      // },3000)\r\n      \r\n      \r\n      \r\n      console.log(\"go to can activ\");\r\n      this.router.navigate(['/home'])\r\n      this.srvCanActivate.logIn = true\r\n      \r\n    }\r\n    else{\r\n      console.log('kafatz');\r\n      console.log(this.registrationFromG.errors)\r\n      alert(\"פרטים לא שלמים\")\r\n    }\r\n    \r\n  \r\n  }\r\n}\r\n","<form class=\"form-signin\" [formGroup]=\"registrationFromG\">\r\n\r\n    <div class=\" header\">\r\n        <h1 id=\"s\">s</h1><h1 id=\"l\">l</h1><h1 id=\"a\">a</h1><h1 id=\"c\">c</h1><h1 id=\"k\">k</h1>\r\n    </div>\r\n\r\n<div class=\"container register-form\">\r\n    <div class=\"form\">\r\n\r\n        <div class=\"note\">\r\n            <p style=\"text-decoration: underline;\">This is a simpleRegister Form slack</p>\r\n        </div><br><br>\r\n\r\n        <div class=\"form-content\">\r\n\r\n                <div class=\"rishum\">\r\n                    <div class=\"firstName\">\r\n                        <input #firstName type=\"text\" formControlName='firstName' class=\"form-control\" placeholder=\"first Name *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                    <div class=\"lastName\">\r\n                        <input #lastName type=\"text\" formControlName='lastName' class=\"form-control\" placeholder=\"last name *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                    <div class=\"email\">\r\n                        <input #email type=\"text\" formControlName='email' class=\"form-control\" placeholder=\"email *\" value=\"\"/>\r\n                    </div><br>\r\n                \r\n                    <div class=\"Password\">\r\n                        <input #Password type=\"password\" formControlName='password' class=\"form-control\" placeholder=\"Your Password *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                    <div class=\"ConfirmPassword\">\r\n                        <input #ConfirmPassword type=\"password\" formControlName='confirmPassword' class=\"form-control\" placeholder=\"Confirm Password *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btnSubmit\" (click)='guard(firstName.value,lastName.value,email.value,Password.value,ConfirmPassword.value)' >Submit</button>\r\n        \r\n    </div>\r\n</div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { CanActivService } from 'src/app/can-activ.service';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { persone, IStatePerson } from 'src/app/services/stor/events';\r\nimport { areAllEquivalent } from '@angular/compiler/src/output/output_ast';\r\nimport { arraysAreNotAllowedMsg } from '@ngrx/store/src/models';\r\nimport { of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { usersFeature, selectFeature } from 'src/app/services/stor/selectorim';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css'],\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder, private srvData: SendDataService, private srvCanActivate: CanActivService ,private router:Router,private store:Store<IStatePerson> ,private srv:GetDataService) { }\r\n\r\n\r\n  signInFromG = this.fb.group({\r\n    myEmail: ['', [Validators.required, Validators.email]],\r\n    myPassword: ['', [Validators.required, Validators.min(9)]],\r\n    remmberMe: ['']\r\n  })\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  onSubmitForm() {\r\n\r\n\r\n    let user = []\r\n    // user.push(this.signInFromG.controls.myEmail.value,this.signInFromG.controls.myPassword.value,rememberMe)\r\n    // this.srvData.usersFromLog.push(user)\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  guard(email, password, rememberMe) {\r\n\r\n    this.srv.myUsers.subscribe(val => {\r\n      console.log(val);\r\n      \r\n      for (let i of val) {\r\n        if (i.email == email && i.password == password) {       \r\n          this.srvData.personU.next(i)\r\n          this.srvData.personU.subscribe(vv=>console.log(vv))\r\n          this.router.navigate(['/home'])\r\n          this.srvCanActivate.logIn = true\r\n          return\r\n        }\r\n      }\r\n      if (this.signInFromG.valid) {\r\n        alert(\"פרטים לא נכונים\")\r\n      }\r\n      else {\r\n        alert(\"פרטים לא מלאים\")\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  log(){    \r\n    this.store.pipe(select(selectFeature)).subscribe(val=>console.log(val))    \r\n  }\r\n\r\n\r\n\r\n}\r\n","<form class=\"form-signin\" [formGroup]=\"signInFromG\">\r\n\r\n  <div class=\" header\">\r\n    <h1 id=\"s\">s</h1><h1 id=\"l\">l</h1><h1 id=\"a\">a</h1><h1 id=\"c\">c</h1><h1 id=\"k\">k</h1>\r\n</div>\r\n\r\n  <div class=\"container register-form\">\r\n    <div class=\"form\">\r\n\r\n      <div class=\"note\">\r\n        <p style=\"text-decoration: underline;\">Sing in to slack</p>\r\n      </div><br><br>\r\n\r\n      <div class=\"form-content\">\r\n\r\n        <div class=\"rishum\">\r\n          <div class=\"firstName\">\r\n            <input type=\"email\" #inputEmail formControlName='myEmail' class=\"form-control\" placeholder=\"email address *\"\r\n              value=\"\" /><br>\r\n            <!-- <div *ngIf='signInFromG.get(\"myEmail\").invalid '><span id=\"email\">שדה זו חובה</span></div> -->\r\n          </div><br>\r\n\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" #inputPassword formControlName='myPassword' class=\"form-control\"\r\n              placeholder=\"Your Password *\" value=\"\" /><br>\r\n            <!-- <div *ngIf='(signInFromG.get(\"myPassword\").invalid)'><span password>שדה זו חובה</span></div> -->\r\n          </div><br>\r\n\r\n          <label>\r\n            <input type=\"checkbox\" #rememberMe value=\"true\"> Remember me\r\n          </label>\r\n\r\n        </div>\r\n      </div><br><br><br><br><br>\r\n      <button type=\"button\" class=\"btnSubmit\" (click)='guard(inputEmail.value,inputPassword.value,rememberMe.value)' >Submit</button><br>\r\n      <!-- <button (click)='log()'>ffffffffffff</button> -->\r\n      <!-- <p class=\"mt-5 mb-3 text-muted\">&copy; 2020</p> -->\r\n\r\n    </div>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, observable, of, BehaviorSubject } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { addPerson, persone, editPerson, IStatePerson, removePerson } from './stor/events';\r\nimport { tap, filter } from 'rxjs/operators'\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Post, editPost } from './stor/postim';\r\nimport { SendDataService } from './send-data.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetDataService {\r\n\r\n  counter:number = 0\r\n\r\n  myUsers: Observable<any> =new Observable()\r\n  myAllPosts:Observable<any>=new Observable()\r\n\r\n  // personU = new BehaviorSubject(null)\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  constructor(private stor: Store<any>, private fireStore: AngularFirestore ) {\r\n\r\n\r\n    this.myUsers = this.fireStore.collection(\"person\").valueChanges()\r\n\r\n    this.myUsers.subscribe(val=> this.stor.dispatch(editPerson({personse:val})))\r\n\r\n    this.myAllPosts = this.fireStore.collection(\"posts\").valueChanges()\r\n\r\n    this.myAllPosts.subscribe(val=> {\r\n\r\n      this.counter = val.length\r\n      this.stor.dispatch(editPost({posts:val}))})\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  addPerson(person) {\r\n    this.fireStore.collection(\"person\").add(person)\r\n  }\r\n\r\n\r\n  sendPost(post) {   \r\n    this.fireStore.collection(\"posts\").add(post)\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject, of } from 'rxjs';\r\nimport { persone } from './stor/events';\r\nimport { Post } from './stor/postim';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { selectFeature, selectFeaturePost } from './stor/selectorim';\r\nimport { GetDataService } from './get-data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SendDataService {\r\n\r\n  counter:number =0\r\n\r\n  myUsers: Observable<any>\r\n  myAllPosts:Observable<any>\r\n  // myPost:Observable<any> = new Observable()\r\n\r\n  clickPerson: Subject<persone> = new Subject()\r\n  // sendDataMessege: Subject<persone> = new Subject()\r\n  arrayPost = new BehaviorSubject<Post[]>(null)\r\n  personU = new BehaviorSubject(null)\r\n\r\n\r\n\r\n\r\n  constructor(private stor: Store<any>,private srvGet:GetDataService) { \r\n\r\n    this.myUsers =this.stor.pipe(select(selectFeature))\r\n    this.myAllPosts = this.stor.pipe(select(selectFeaturePost))\r\n    // this.personU = this.srvGet.personU\r\n    this.counter = this.srvGet.counter\r\n  }\r\n\r\n\r\n\r\n  getFilterDataMessege(name) {\r\n    \r\n    let myUser\r\n    // let itsPost=[]\r\n\r\n    this.personU.subscribe(val=>{myUser = val})\r\n    \r\n    this.clickPerson.next(name)\r\n\r\n    this.myAllPosts.subscribe(val=>{\r\n      let arr =[]\r\n      let itsPost=[]\r\n      for (let i in val){\r\n        \r\n        if((val[i].address== name.id && val[i].addressee == myUser.id ) || (val[i].address== myUser.id && val[i].addressee ==name.id)){\r\n          arr.push(val[i])\r\n        };\r\n      }\r\n      console.log(arr);\r\n      \r\n      for (let i =0;i<arr.length;i++){\r\n        for (let j of arr){\r\n          console.log(j);\r\n          \r\n          if(j.id == i+1){\r\n            console.log(\"lllllll\");\r\n            \r\n            itsPost.push(j)\r\n          }\r\n        }\r\n        \r\n        \r\n      }\r\n      console.log(itsPost);\r\n      \r\n      this.arrayPost.next(itsPost)\r\n      // this.myPost= of(itsPost)\r\n    })}\r\n\r\n\r\n    getAllPosts() {\r\n      return this.myAllPosts\r\n    }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\n\r\nexport interface persone {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password:string\r\n}\r\n\r\nexport interface persones {\r\n  persons:persone[]\r\n}\r\n\r\n\r\n\r\nexport const addPerson = createAction(\r\n  '[Add Person] Event',\r\n  props<persone>()\r\n);\r\n\r\n\r\n\r\nexport const removePerson = createAction(\r\n  '[Remove Person] Event',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const editPerson = createAction(\r\n  '[edit Person] Event',\r\n  props<{personse:persone[]}>()\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport interface IStatePerson {\r\n    personse: persone[]\r\n  \r\n}\r\n\r\nexport const stateArrayPerson: IStatePerson = {\r\n    personse: []\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst eventsReducer = createReducer(\r\n  \r\n  stateArrayPerson,\r\n  on(addPerson, (state: IStatePerson, newPerson: persone):IStatePerson => {\r\n\r\n    return {...state,personse:[...state.personse,newPerson]}\r\n  }),\r\n\r\n\r\n\r\n  on(removePerson, (state ,id:{id:number}) => {\r\n\r\n    let delPerson = state.personse.filter(event=>event.id!==id.id);\r\n    return { ...state,delPerson} }),\r\n\r\n\r\n\r\n\r\n\r\non(editPerson, (state: IStatePerson ,newPersons:{personse:persone[]}) => {\r\n  let array = newPersons.personse\r\n  \r\n  return { ...state,...array}},\r\n  ));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function reducer(state: IStatePerson | undefined, action: Action) {\r\n\r\n  return eventsReducer(state, action);\r\n}","import { createAction, props } from '@ngrx/store';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport { persone } from './events';\r\n\r\nexport interface Post {\r\n  address: string;\r\n  addressee:number;\r\n  date:Date\r\n  text: string;\r\n\r\n}\r\n\r\n\r\nexport const addPost = createAction(\r\n  '[Add Post] Post',\r\n  props<Post>()\r\n);\r\n\r\nexport const removePost = createAction(\r\n  '[Remove Post] Post',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const editPost = createAction(\r\n  '[edit Person] Post',\r\n  props<{posts:Post[]}>()\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport interface IStateArrPost {\r\n    posts: Post[]\r\n  \r\n}\r\n\r\nexport const stateArrayPost: IStateArrPost = {\r\n    posts: []\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst eventsReducer = createReducer(\r\n  stateArrayPost,\r\n  on(addPost, (state: IStateArrPost, newPost: Post):IStateArrPost => {\r\n    \r\n    \r\n    return {...state,posts:[...state.posts,newPost]}\r\n  }),\r\n\r\n\r\n  on(editPost, (state: IStateArrPost ,newPost:{posts:Post[]}) => {\r\n    console.log(\"postedit\");\r\n    let array = newPost.posts\r\n    \r\n    return { ...state,...array}},\r\n    ));\r\n\r\n\r\n  // on(removePost, (state ,id:{id:number}) => {  \r\n    // let delPost = state.posts.filter(post=>post.id!==id.id);\r\n    // return { ...state,delPost} }),\r\n\r\n\r\nexport function reducerPost(state: IStateArrPost | undefined, action: Action) {\r\n  console.log(action);\r\n  \r\n  return eventsReducer(state, action);\r\n}","import { createSelector, createFeatureSelector, MemoizedSelector } from '@ngrx/store';\r\nimport { IStatePerson, persone } from './events';\r\nimport { IStateArrPost, Post } from './postim';\r\n\r\n\r\nexport const selectFeature :MemoizedSelector<object,IStatePerson>= createFeatureSelector< IStatePerson>('users');\r\n\r\nexport const usersFeature:MemoizedSelector<object,persone[]> = createSelector(\r\n  selectFeature,\r\n  (state):persone[]=>state.personse \r\n)\r\n\r\nexport const selectUserNameFeature:MemoizedSelector<object,string[]> = createSelector(\r\n    selectFeature,\r\n  (state) :string[]=> state.personse.map(x => x.email)\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const selectFeaturePost :MemoizedSelector<object,IStateArrPost>= createFeatureSelector< IStateArrPost>('posts');\r\n\r\nexport const postsFeature:MemoizedSelector<object,Post[]> = createSelector(\r\n  selectFeaturePost,\r\n  (state):Post[]=>state.posts \r\n)\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: 'AIzaSyD3XXJQKDJaQ9_1-ESm9oGNohJ-441fdM0',\r\n    authDomain: 'slack-mimic-1db80.firebaseapp.com',\r\n    databaseURL: 'https://slack-mimic-1db80.firebaseio.com',\r\n    projectId: 'slack-mimic-1db80',\r\n    // storageBucket: '<your-storage-bucket>',\r\n    // messagingSenderId: '<your-messaging-sender-id>'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}