{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auto.guard.ts","webpack:///src/app/can-activ.service.ts","webpack:///src/app/comps/chat/chat.component.ts","webpack:///src/app/comps/chat/chat.component.html","webpack:///src/app/comps/chat/dropdown.directive.ts","webpack:///src/app/comps/home/home.component.ts","webpack:///src/app/comps/home/home.component.html","webpack:///src/app/comps/input-amessege/input-amessege.component.ts","webpack:///src/app/comps/input-amessege/input-amessege.component.html","webpack:///src/app/comps/list-nams/list-nams.component.ts","webpack:///src/app/comps/list-nams/list-nams.component.html","webpack:///src/app/comps/open/open.component.ts","webpack:///src/app/comps/open/open.component.html","webpack:///src/app/comps/registration/registration.component.ts","webpack:///src/app/comps/registration/registration.component.html","webpack:///src/app/comps/sign-in/sign-in.component.ts","webpack:///src/app/comps/sign-in/sign-in.component.html","webpack:///src/app/services/get-data.service.ts","webpack:///src/app/services/send-data.service.ts","webpack:///src/app/services/stor/events.ts","webpack:///src/app/services/stor/postim.ts","webpack:///src/app/services/stor/selectorim.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","users","posts","runtimeChecks","strictStateImmutability","strictActionImmutability","instrument","maxAge","declarations","providers","bootstrap","AutoGuard","srv","router","next","state","console","log","getLogIn","providedIn","CanActivService","logIn","ChatComponent","srvData","myMessege","myAllMessege","personU","subscribe","val","myUser","clickPerson","userClick","arrayPost","hello","firstName","lastName","myAllPosts","i","push","sort","a","b","allMesseg","DropdownDirective","elRef","isOpen","event","nativeElement","contains","target","HomeComponent","gurd","InputAMessegeComponent","myPerson","myPersonSend","input","document","getElementById","date","Date","text","value","address","addressName","addressee","addresseeName","post","counter","dateTime","getHours","getMinutes","dateDay","toLocaleDateString","sendPost","undefined","alert","send","ListNamsComponent","stor","myusers","myUsers","person","getFilterDataMessege","filter","toLowerCase","startsWith","myinp","OpenComponent","navigate","login","registration","RegistrationComponent","fb","srvCanActivate","fireStore","srvGet","registrationFromG","group","required","email","password","confirmPassword","ConfirmPassword","valid","Math","floor","random","addPerson","errors","guard","SignInComponent","store","signInFromG","myEmail","myPassword","min","remmberMe","user","rememberMe","vv","pipe","GetDataService","collection","valueChanges","dispatch","personse","length","add","SendDataService","name","arr","itsPost","j","removePerson","editPerson","stateArrayPerson","eventsReducer","newPerson","delPerson","newPersons","array","reducer","action","addPost","removePost","editPost","stateArrayPost","newPost","reducerPost","selectFeature","usersFeature","selectUserNameFeature","map","x","selectFeaturePost","postsFeature","environment","production","apiKey","authDomain","databaseURL","projectId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignInComponent } from './comps/sign-in/sign-in.component';\r\nimport { AutoGuard } from './auto.guard';\r\nimport { HomeComponent } from './comps/home/home.component';\r\nimport { OpenComponent } from './comps/open/open.component';\r\nimport { RegistrationComponent } from './comps/registration/registration.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:\"\", component:OpenComponent},\r\n  {path:\"home\", component:HomeComponent , canActivate:[AutoGuard]},\r\n  {path:\"logIn\", component:SignInComponent  },\r\n  {path:\"registration\", component:RegistrationComponent },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'slack';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignInComponent } from './comps/sign-in/sign-in.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ChatComponent } from './comps/chat/chat.component';\r\nimport { DropdownDirective } from './comps/chat/dropdown.directive';\r\nimport { AutoGuard } from './auto.guard';\r\nimport { CanActivService } from './can-activ.service';\r\nimport { ListNamsComponent } from './comps/list-nams/list-nams.component';\r\nimport { HomeComponent } from './comps/home/home.component';\r\nimport { HttpClientModule }from '@angular/common/http';\r\nimport { StoreModule } from '@ngrx/store' ;\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\r\nimport { reducer } from './services/stor/events';\r\nimport { InputAMessegeComponent } from './comps/input-amessege/input-amessege.component';\r\nimport { OpenComponent } from './comps/open/open.component';\r\nimport { RegistrationComponent } from './comps/registration/registration.component'\r\n\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { environment } from 'src/environments/environment';\r\nimport { reducerPost } from './services/stor/postim';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignInComponent,\r\n    ChatComponent,\r\n    DropdownDirective,\r\n    ListNamsComponent,\r\n    HomeComponent,\r\n    InputAMessegeComponent,\r\n    OpenComponent,\r\n    RegistrationComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n\r\n    StoreModule.forRoot( {users:reducer, posts:reducerPost}, {\r\n\r\n      runtimeChecks: {\r\n        strictStateImmutability: true,\r\n        strictActionImmutability: true,\r\n      }\r\n\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25 }),\r\n    \r\n    \r\n  ],\r\n  providers: [AutoGuard,CanActivService],\r\n  bootstrap: [AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable, from } from 'rxjs';\r\nimport{CanActivService}from './can-activ.service'\r\n@Injectable({\r\n  providedIn: 'root',\r\n  \r\n})\r\nexport class AutoGuard implements CanActivate {\r\n\r\n  constructor(private srv:CanActivService, private router:Router){}\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      console.log(\"canActivate\");\r\n      \r\n      if (this.srv.getLogIn()){\r\n        \r\n        \r\n    return true;}\r\n    else{\r\n      console.log(false);\r\n      return false\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivService {\n\n  logIn =false\n  constructor() { }\n\n\n  getLogIn(){\n    console.log(this.logIn);\n    \n    return this.logIn\n  }\n}\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { Subject, Observable, observable } from 'rxjs';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\nimport { persone } from 'src/app/services/stor/events';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit,OnDestroy {\r\n  \r\n  \r\n  myMessege =[]\r\n  myAllMessege=[]\r\n  hello:string\r\n  myUser:persone\r\n  userClick:persone\r\n\r\n  constructor( private srvData:SendDataService) { }\r\n  \r\n  \r\n\r\n  ngOnInit(): void {\r\n\r\n    this.srvData.personU.subscribe(val=>this.myUser=val)\r\n    this.srvData.clickPerson.subscribe(val=>this.userClick=val)\r\n\r\n    this.srvData.arrayPost.subscribe(val=>{console.log(val),this.myMessege=val})\r\n    \r\n    this.srvData.personU.subscribe(val=> {\r\n      if(val !=null){\r\n      this.hello = `שלום ${val.firstName} ${val.lastName} `}})\r\n  }\r\n\r\n\r\n\r\n\r\n  allMesseg(){\r\n    this.srvData.myAllPosts.subscribe(val=>{\r\n      console.log(val);\r\n      this.myAllMessege=[]\r\n      for( let i in val){\r\n        \r\n        if(val[i] !=''){\r\n        this.myAllMessege.push(val[i])}\r\n        this.myMessege = this.myAllMessege  \r\n      }\r\n      this.myAllMessege.sort(function(a,b){\r\n        return a.id - b.id\r\n      })\r\n      \r\n      \r\n    })\r\n    \r\n    \r\n    \r\n\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.myMessege = ['']\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"chat\">\r\n    <span id=\"hello\" >{{hello}}</span><br>\r\n  <div class=\"buttons\">\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)='allMesseg()'>כל ההודעות</button>\r\n    <button type=\"button\" class=\"btn btn-danger\">הכי ישן</button>\r\n    <button type=\"button\" class=\"btn btn-success\">הכי חדש</button>\r\n   \r\n  </div>\r\n\r\n\r\n  <div class=\"h3\">\r\n    <h3>הצ'אטים שלי</h3>\r\n  </div><br><br><br><br><br><br>\r\n\r\n\r\n  <div id=\"messeg\" *ngFor ='let i of myMessege' >\r\n    <div class=\"nessU\" *ngIf='i.address == myUser.id' style=\" text-align: right;\">\r\n      <span id=\"spanAddress\" >{{i.addressName}}</span><br>\r\n      <span style=\"color: cornflowerblue;\">{{i.dateDay}}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: cornflowerblue;\">{{i.dateTime}}</span><br><br>\r\n      <span style=\"color: brown;\">{{i.text}}</span><hr><br>\r\n    </div>\r\n\r\n    <div class=\"nessClick\" *ngIf='i.address != myUser.id' style=\"text-align: left \">\r\n      <span id=\"spanAddress\" >{{i.addressName}}</span><br>\r\n      <span style=\"color: cornflowerblue;\">{{i.dateDay}}</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: cornflowerblue;\">{{i.dateTime}}</span><br><br>\r\n      <span style=\"color: darkgreen;\">{{i.text}}</span><hr><br>\r\n    </div>\r\n    \r\n  </div>\r\n</div>","import { Directive, HostListener, HostBinding, ElementRef } from '@angular/core';\r\n@Directive({ selector: '[appDropdown]' }) export class DropdownDirective {\r\n@HostBinding('class.open') isOpen = false;\r\n@HostListener('document:click', ['$event']) toggleOpen(event: Event) { this.isOpen = this.elRef.nativeElement.contains(event.target) ? !this.isOpen : false; } constructor(private elRef: ElementRef) { }\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { CanActivService } from 'src/app/can-activ.service';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit ,OnDestroy{\r\n\r\n  constructor(private srv:SendDataService ,private gurd:CanActivService) { }\r\n  ngOnDestroy(): void {\r\n    this.gurd.logIn = false\r\n    this.srv.personU =new BehaviorSubject(null)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<div class=\"all\" >\r\n\r\n\r\n    <div class=\"listUsers\">\r\n        <app-list-nams></app-list-nams>\r\n    </div>\r\n\r\n\r\n    <div class=\"chatAndInput\" >\r\n\r\n        <div class=\"chat\">\r\n            <app-chat></app-chat>\r\n        </div>\r\n\r\n        <div class=\"input\">\r\n            <app-input-amessege></app-input-amessege>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\nimport { persone } from 'src/app/services/stor/events';\r\n\r\n@Component({\r\n  selector: 'app-input-amessege',\r\n  templateUrl: './input-amessege.component.html',\r\n  styleUrls: ['./input-amessege.component.css']\r\n})\r\nexport class InputAMessegeComponent implements OnInit {\r\n\r\n  input\r\n  constructor(private srv:GetDataService, private srvData:SendDataService) { }\r\n\r\n  myPerson:string = \"הודעה\"\r\n  myPersonSend:persone\r\n  mypersonSendTo:number\r\n  ngOnInit(): void {\r\n     this.srvData.clickPerson.subscribe(val=>{this.myPersonSend = val,this.myPerson= `הודעה ל${val.firstName} ${val.lastName}`})\r\n    //  this.srv.personU.subscribe(val=> this.mypersonSendTo = val.id)\r\n     this.input = document.getElementById('inputSend')\r\n\r\n  }\r\n\r\n  send(){\r\n// console.log(this.myPersonSend);\r\n\r\n    let date =new Date();\r\n   \r\n\r\n    \r\n//     console.log(date);\r\n    \r\n    let text = this.input.value\r\n    let address\r\n    let addressName\r\n    let addressee =this.myPersonSend.id  \r\n    let addresseeName= `${this.myPersonSend.firstName} ${this.myPersonSend.lastName}`\r\n    \r\n    \r\n    \r\n    this.srvData.personU.subscribe(val=> {\r\n      address = val.id\r\n      addressName = `${val.firstName} ${val.lastName}`\r\n    \r\n    })\r\n    \r\n\r\n    let post ={\r\n      id:++this.srvData.counter,\r\n      address:address,\r\n      addressName:addressName,\r\n      addressee:addressee,\r\n      addresseeName:addresseeName,\r\n      date:new Date(),\r\n      dateTime:`${date.getHours()} : ${date.getMinutes()}`,\r\n      dateDay:date.toLocaleDateString(),\r\n      text:text\r\n    };\r\n    \r\n    this.srv.sendPost(post)\r\n    this.input.value = ''\r\n    \r\n\r\n\r\n  }\r\n\r\n\r\n  return(){\r\n    if (this.myPersonSend ==undefined){\r\n      this.input.value = ''\r\n      alert(\"הכנס נמען שאתה רוצה לשלוח לו\")\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n \r\n\r\n \r\n\r\n}\r\n","    <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\" style=\"display: flex;\">\r\n          <button (click)='send()'>שלח</button>\r\n        <textarea #inp (input)='return()' (keyup.enter)='send()' dir=\"rtl\" id=\"inputSend\" class=\"form-control\" aria-label=\"With textarea\" [placeholder] = 'myPerson'></textarea>\r\n      \r\n      </div>\r\n\r\n\r\n      </div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { selectUserNameFeature, usersFeature } from 'src/app/services/stor/selectorim';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n@Component({\r\n  selector: 'app-list-nams',\r\n  templateUrl: './list-nams.component.html',\r\n  styleUrls: ['./list-nams.component.css']\r\n})\r\nexport class ListNamsComponent implements OnInit {\r\n\r\n  users=[]\r\n  myusers=[]\r\n  \r\n\r\n\r\n  constructor( private stor: Store , private srvData:SendDataService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.srvData.myUsers.subscribe(val=>{\r\n      for( let i in val){\r\n        if(val[i].firstName != undefined){\r\n        this.myusers.push(val[i])}\r\n      }\r\n      this.users = this.myusers\r\n    })\r\n\r\n    // this.srv.myUsers.subscribe(val => {this.users = val, this.myusers=val})\r\n    \r\n    \r\n  }\r\n\r\n  sendPersom(person) {\r\n    this.srvData.getFilterDataMessege(person)\r\n  }\r\n\r\n  myinp(input) {\r\n    this.users = this.myusers.filter((val) => val.firstName.toLowerCase().startsWith(input))\r\n  }\r\n\r\n  log() {\r\n       \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"all\">\r\n\r\n    <div class=\"persons\">\r\n        <div class=\"input-group\">\r\n<!-- <button (click)='log()'>llllllll</button> -->\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"חיפוש חופשי\" (input)='myinp($event.target.value)'>\r\n        </div>\r\n\r\n      <!-- <button (click)='log()'>llllll</button> -->\r\n\r\n\r\n\r\n        <div class=\"buttons\" >\r\n            <button *ngFor='let i of users' (click)='sendPersom(i)'>{{i.firstName}} {{i.lastName}} </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-open',\r\n  templateUrl: './open.component.html',\r\n  styleUrls: ['./open.component.css']\r\n})\r\nexport class OpenComponent implements OnInit {\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(){    \r\n    this.router.navigate(['/logIn'])\r\n  }\r\n\r\n  registration(){\r\n    this.router.navigate(['/registration'])\r\n  }\r\n\r\n}\r\n","\n<div>\n \n<div class=\" header\">\n    <h1 id=\"s\">s</h1><h1 id=\"l\">l</h1><h1 id=\"a\">a</h1><h1 id=\"c\">c</h1><h1 id=\"k\">k</h1>\n</div>\n\n<div class=\"allData\">\n    \n        \n        <div class=\"explain\">\n\n            <span style=\"text-decoration: underline;\">WORK FROM HOME</span><br><br>\n            <h1>Slack brings the team together, wherever you are</h1><br><br>\n            <p>With all of your communication and tools in one place, remote teams will stay productive no matter where you’re working from.</p>\n            \n        <div class=\"buttons\">\n    <button class=\"login\" (click)='login()'>\n       login\n    </button>\n\n   <button class=\"registration\" (click)='registration()'>\n        registration\n   </button>\n</div>\n</div>\n\n<div class=\"img\">\n    <img src=\"https://a.slack-edge.com/dd0405/marketing/img/solutions/remote-work/img-hero-remote.jpg\" srcset=\"https://a.slack-edge.com/dd0405/marketing/img/solutions/remote-work/img-hero-remote.jpg 1x, https://a.slack-edge.com/dd0405/marketing/img/solutions/remote-work/img-hero-remote@2x.jpg 2x\" alt=\"A Slack channel surrounded by people’s profile photos and messages like “Working from home!” and “Commuting, be there soon”\">\n</div>\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { CanActivService } from 'src/app/can-activ.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { addPerson } from 'src/app/services/stor/events';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { ChatComponent } from '../chat/chat.component';\r\nimport { of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  log \r\n\r\n  constructor(private fb:FormBuilder ,private srvCanActivate:CanActivService , private stor:Store<any>,private fireStore:AngularFirestore ,private srvData:SendDataService,private router:Router ,private srvGet:GetDataService) { }\r\n\r\n\r\n  registrationFromG = this.fb.group({\r\n    firstName :['',Validators.required],\r\n    lastName : ['',Validators.required],\r\n    email:['',[Validators.required,Validators.email]],\r\n    password:['',Validators.required],\r\n    confirmPassword:['',Validators.required]})\r\n  \r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  guard(firstName,lastName,email,password,ConfirmPassword){\r\n\r\n    if(password !== ConfirmPassword){\r\n      alert(\"אימות סיסמא שגוי\")\r\n      return\r\n    }\r\n\r\n    \r\n    console.log(this.registrationFromG.valid);\r\n    \r\n    if(this.registrationFromG.valid){\r\n\r\n      let id = Math.floor(Math.random() * 10000000);\r\n      let person ={\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password\r\n      }\r\n      console.log(person);\r\n      this.srvGet.addPerson(person)\r\n      this.srvData.personU.next(person)\r\n      \r\n\r\n      \r\n      // setTimeout(()=>{\r\n      //   this.srvData.personUser.next(person)\r\n      // },3000)\r\n      \r\n      \r\n      \r\n      console.log(\"go to can activ\");\r\n      this.router.navigate(['/home'])\r\n      this.srvCanActivate.logIn = true\r\n      \r\n    }\r\n    else{\r\n      console.log('kafatz');\r\n      console.log(this.registrationFromG.errors)\r\n      alert(\"פרטים לא שלמים\")\r\n    }\r\n    \r\n  \r\n  }\r\n}\r\n","<form class=\"form-signin\" [formGroup]=\"registrationFromG\">\r\n\r\n    <div class=\" header\">\r\n        <h1 id=\"s\">s</h1><h1 id=\"l\">l</h1><h1 id=\"a\">a</h1><h1 id=\"c\">c</h1><h1 id=\"k\">k</h1>\r\n    </div>\r\n\r\n<div class=\"container register-form\">\r\n    <div class=\"form\">\r\n\r\n        <div class=\"note\">\r\n            <p style=\"text-decoration: underline;\">This is a simpleRegister Form slack</p>\r\n        </div><br><br>\r\n\r\n        <div class=\"form-content\">\r\n\r\n                <div class=\"rishum\">\r\n                    <div class=\"firstName\">\r\n                        <input #firstName type=\"text\" formControlName='firstName' class=\"form-control\" placeholder=\"first Name *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                    <div class=\"lastName\">\r\n                        <input #lastName type=\"text\" formControlName='lastName' class=\"form-control\" placeholder=\"last name *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                    <div class=\"email\">\r\n                        <input #email type=\"text\" formControlName='email' class=\"form-control\" placeholder=\"email *\" value=\"\"/>\r\n                    </div><br>\r\n                \r\n                    <div class=\"Password\">\r\n                        <input #Password type=\"password\" formControlName='password' class=\"form-control\" placeholder=\"Your Password *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                    <div class=\"ConfirmPassword\">\r\n                        <input #ConfirmPassword type=\"password\" formControlName='confirmPassword' class=\"form-control\" placeholder=\"Confirm Password *\" value=\"\"/>\r\n                    </div><br>\r\n\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btnSubmit\" (click)='guard(firstName.value,lastName.value,email.value,Password.value,ConfirmPassword.value)' >Submit</button>\r\n        \r\n    </div>\r\n</div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { CanActivService } from 'src/app/can-activ.service';\r\nimport { GetDataService } from 'src/app/services/get-data.service';\r\nimport { persone, IStatePerson } from 'src/app/services/stor/events';\r\nimport { areAllEquivalent } from '@angular/compiler/src/output/output_ast';\r\nimport { arraysAreNotAllowedMsg } from '@ngrx/store/src/models';\r\nimport { of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { usersFeature, selectFeature } from 'src/app/services/stor/selectorim';\r\nimport { SendDataService } from 'src/app/services/send-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css'],\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n\r\n\r\n\r\n\r\n  constructor(private fb: FormBuilder, private srvData: SendDataService, private srvCanActivate: CanActivService ,private router:Router,private store:Store<IStatePerson> ,private srv:GetDataService) { }\r\n\r\n\r\n  signInFromG = this.fb.group({\r\n    myEmail: ['', [Validators.required, Validators.email]],\r\n    myPassword: ['', [Validators.required, Validators.min(9)]],\r\n    remmberMe: ['']\r\n  })\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  onSubmitForm() {\r\n\r\n\r\n    let user = []\r\n    // user.push(this.signInFromG.controls.myEmail.value,this.signInFromG.controls.myPassword.value,rememberMe)\r\n    // this.srvData.usersFromLog.push(user)\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  guard(email, password, rememberMe) {\r\n\r\n    this.srv.myUsers.subscribe(val => {\r\n      console.log(val);\r\n      \r\n      for (let i of val) {\r\n        if (i.email == email && i.password == password) {       \r\n          this.srvData.personU.next(i)\r\n          this.srvData.personU.subscribe(vv=>console.log(vv))\r\n          this.router.navigate(['/home'])\r\n          this.srvCanActivate.logIn = true\r\n          return\r\n        }\r\n      }\r\n      if (this.signInFromG.valid) {\r\n        alert(\"פרטים לא נכונים\")\r\n      }\r\n      else {\r\n        alert(\"פרטים לא מלאים\")\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  log(){    \r\n    this.store.pipe(select(selectFeature)).subscribe(val=>console.log(val))    \r\n  }\r\n\r\n\r\n\r\n}\r\n","<form class=\"form-signin\" [formGroup]=\"signInFromG\">\r\n\r\n  <div class=\" header\">\r\n    <h1 id=\"s\">s</h1><h1 id=\"l\">l</h1><h1 id=\"a\">a</h1><h1 id=\"c\">c</h1><h1 id=\"k\">k</h1>\r\n</div>\r\n\r\n  <div class=\"container register-form\">\r\n    <div class=\"form\">\r\n\r\n      <div class=\"note\">\r\n        <p style=\"text-decoration: underline;\">Sing in to slack</p>\r\n      </div><br><br>\r\n\r\n      <div class=\"form-content\">\r\n\r\n        <div class=\"rishum\">\r\n          <div class=\"firstName\">\r\n            <input type=\"email\" #inputEmail formControlName='myEmail' class=\"form-control\" placeholder=\"email address *\"\r\n              value=\"\" /><br>\r\n            <!-- <div *ngIf='signInFromG.get(\"myEmail\").invalid '><span id=\"email\">שדה זו חובה</span></div> -->\r\n          </div><br>\r\n\r\n          <div class=\"form-group\">\r\n            <input type=\"password\" #inputPassword formControlName='myPassword' class=\"form-control\"\r\n              placeholder=\"Your Password *\" value=\"\" /><br>\r\n            <!-- <div *ngIf='(signInFromG.get(\"myPassword\").invalid)'><span password>שדה זו חובה</span></div> -->\r\n          </div><br>\r\n\r\n          <label>\r\n            <input type=\"checkbox\" #rememberMe value=\"true\"> Remember me\r\n          </label>\r\n\r\n        </div>\r\n      </div><br><br><br><br><br>\r\n      <button type=\"button\" class=\"btnSubmit\" (click)='guard(inputEmail.value,inputPassword.value,rememberMe.value)' >Submit</button><br>\r\n      <!-- <button (click)='log()'>ffffffffffff</button> -->\r\n      <!-- <p class=\"mt-5 mb-3 text-muted\">&copy; 2020</p> -->\r\n\r\n    </div>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, observable, of, BehaviorSubject } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { addPerson, persone, editPerson, IStatePerson, removePerson } from './stor/events';\r\nimport { tap, filter } from 'rxjs/operators'\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport { Post, editPost } from './stor/postim';\r\nimport { SendDataService } from './send-data.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetDataService {\r\n\r\n  counter:number = 0\r\n\r\n  myUsers: Observable<any> =new Observable()\r\n  myAllPosts:Observable<any>=new Observable()\r\n\r\n  // personU = new BehaviorSubject(null)\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  constructor(private stor: Store<any>, private fireStore: AngularFirestore ) {\r\n\r\n\r\n    this.myUsers = this.fireStore.collection(\"person\").valueChanges()\r\n\r\n    this.myUsers.subscribe(val=> this.stor.dispatch(editPerson({personse:val})))\r\n\r\n    this.myAllPosts = this.fireStore.collection(\"posts\").valueChanges()\r\n\r\n    this.myAllPosts.subscribe(val=> {\r\n\r\n      this.counter = val.length\r\n      this.stor.dispatch(editPost({posts:val}))})\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  addPerson(person) {\r\n    this.fireStore.collection(\"person\").add(person)\r\n  }\r\n\r\n\r\n  sendPost(post) {   \r\n    this.fireStore.collection(\"posts\").add(post)\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n  \r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, BehaviorSubject, of } from 'rxjs';\r\nimport { persone } from './stor/events';\r\nimport { Post } from './stor/postim';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { selectFeature, selectFeaturePost } from './stor/selectorim';\r\nimport { GetDataService } from './get-data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SendDataService {\r\n\r\n  counter:number =0\r\n\r\n  myUsers: Observable<any>\r\n  myAllPosts:Observable<any>\r\n  // myPost:Observable<any> = new Observable()\r\n\r\n  clickPerson: Subject<persone> = new Subject()\r\n  // sendDataMessege: Subject<persone> = new Subject()\r\n  arrayPost = new BehaviorSubject<Post[]>(null)\r\n  personU = new BehaviorSubject(null)\r\n\r\n\r\n\r\n\r\n  constructor(private stor: Store<any>,private srvGet:GetDataService) { \r\n\r\n    this.myUsers =this.stor.pipe(select(selectFeature))\r\n    this.myAllPosts = this.stor.pipe(select(selectFeaturePost))\r\n    // this.personU = this.srvGet.personU\r\n    this.counter = this.srvGet.counter\r\n  }\r\n\r\n\r\n\r\n  getFilterDataMessege(name) {\r\n    \r\n    let myUser\r\n    // let itsPost=[]\r\n\r\n    this.personU.subscribe(val=>{myUser = val})\r\n    \r\n    this.clickPerson.next(name)\r\n\r\n    this.myAllPosts.subscribe(val=>{\r\n      let arr =[]\r\n      let itsPost=[]\r\n      for (let i in val){\r\n        \r\n        if((val[i].address== name.id && val[i].addressee == myUser.id ) || (val[i].address== myUser.id && val[i].addressee ==name.id)){\r\n          arr.push(val[i])\r\n        };\r\n      }\r\n      console.log(arr);\r\n      \r\n      for (let i =0;i<arr.length;i++){\r\n        for (let j of arr){\r\n          console.log(j);\r\n          \r\n          if(j.id == i+1){\r\n            console.log(\"lllllll\");\r\n            \r\n            itsPost.push(j)\r\n          }\r\n        }\r\n        \r\n        \r\n      }\r\n      console.log(itsPost);\r\n      \r\n      this.arrayPost.next(itsPost)\r\n      // this.myPost= of(itsPost)\r\n    })}\r\n\r\n\r\n    getAllPosts() {\r\n      return this.myAllPosts\r\n    }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\n\r\nexport interface persone {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password:string\r\n}\r\n\r\nexport interface persones {\r\n  persons:persone[]\r\n}\r\n\r\n\r\n\r\nexport const addPerson = createAction(\r\n  '[Add Person] Event',\r\n  props<persone>()\r\n);\r\n\r\n\r\n\r\nexport const removePerson = createAction(\r\n  '[Remove Person] Event',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const editPerson = createAction(\r\n  '[edit Person] Event',\r\n  props<{personse:persone[]}>()\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport interface IStatePerson {\r\n    personse: persone[]\r\n  \r\n}\r\n\r\nexport const stateArrayPerson: IStatePerson = {\r\n    personse: []\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst eventsReducer = createReducer(\r\n  \r\n  stateArrayPerson,\r\n  on(addPerson, (state: IStatePerson, newPerson: persone):IStatePerson => {\r\n\r\n    return {...state,personse:[...state.personse,newPerson]}\r\n  }),\r\n\r\n\r\n\r\n  on(removePerson, (state ,id:{id:number}) => {\r\n\r\n    let delPerson = state.personse.filter(event=>event.id!==id.id);\r\n    return { ...state,delPerson} }),\r\n\r\n\r\n\r\n\r\n\r\non(editPerson, (state: IStatePerson ,newPersons:{personse:persone[]}) => {\r\n  let array = newPersons.personse\r\n  \r\n  return { ...state,...array}},\r\n  ));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function reducer(state: IStatePerson | undefined, action: Action) {\r\n\r\n  return eventsReducer(state, action);\r\n}","import { createAction, props } from '@ngrx/store';\r\nimport { Action, createReducer, on } from '@ngrx/store';\r\nimport { persone } from './events';\r\n\r\nexport interface Post {\r\n  address: string;\r\n  addressee:number;\r\n  date:Date\r\n  text: string;\r\n\r\n}\r\n\r\n\r\nexport const addPost = createAction(\r\n  '[Add Post] Post',\r\n  props<Post>()\r\n);\r\n\r\nexport const removePost = createAction(\r\n  '[Remove Post] Post',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const editPost = createAction(\r\n  '[edit Person] Post',\r\n  props<{posts:Post[]}>()\r\n);\r\n\r\n\r\n\r\n\r\n\r\nexport interface IStateArrPost {\r\n    posts: Post[]\r\n  \r\n}\r\n\r\nexport const stateArrayPost: IStateArrPost = {\r\n    posts: []\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst eventsReducer = createReducer(\r\n  stateArrayPost,\r\n  on(addPost, (state: IStateArrPost, newPost: Post):IStateArrPost => {\r\n    \r\n    \r\n    return {...state,posts:[...state.posts,newPost]}\r\n  }),\r\n\r\n\r\n  on(editPost, (state: IStateArrPost ,newPost:{posts:Post[]}) => {\r\n    console.log(\"postedit\");\r\n    let array = newPost.posts\r\n    \r\n    return { ...state,...array}},\r\n    ));\r\n\r\n\r\n  // on(removePost, (state ,id:{id:number}) => {  \r\n    // let delPost = state.posts.filter(post=>post.id!==id.id);\r\n    // return { ...state,delPost} }),\r\n\r\n\r\nexport function reducerPost(state: IStateArrPost | undefined, action: Action) {\r\n  console.log(action);\r\n  \r\n  return eventsReducer(state, action);\r\n}","import { createSelector, createFeatureSelector, MemoizedSelector } from '@ngrx/store';\r\nimport { IStatePerson, persone } from './events';\r\nimport { IStateArrPost, Post } from './postim';\r\n\r\n\r\nexport const selectFeature :MemoizedSelector<object,IStatePerson>= createFeatureSelector< IStatePerson>('users');\r\n\r\nexport const usersFeature:MemoizedSelector<object,persone[]> = createSelector(\r\n  selectFeature,\r\n  (state):persone[]=>state.personse \r\n)\r\n\r\nexport const selectUserNameFeature:MemoizedSelector<object,string[]> = createSelector(\r\n    selectFeature,\r\n  (state) :string[]=> state.personse.map(x => x.email)\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const selectFeaturePost :MemoizedSelector<object,IStateArrPost>= createFeatureSelector< IStateArrPost>('posts');\r\n\r\nexport const postsFeature:MemoizedSelector<object,Post[]> = createSelector(\r\n  selectFeaturePost,\r\n  (state):Post[]=>state.posts \r\n)\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: 'AIzaSyD3XXJQKDJaQ9_1-ESm9oGNohJ-441fdM0',\r\n    authDomain: 'slack-mimic-1db80.firebaseapp.com',\r\n    databaseURL: 'https://slack-mimic-1db80.firebaseio.com',\r\n    projectId: 'slack-mimic-1db80',\r\n    // storageBucket: '<your-storage-bucket>',\r\n    // messagingSenderId: '<your-messaging-sender-id>'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}